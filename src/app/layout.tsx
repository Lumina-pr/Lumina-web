import type { Metadata } from "next";
import { Geist, Geist_Mono } from "next/font/google";
import "@/styles/globals.css";

const geistSans = Geist({
  variable: "--font-geist-sans",
  subsets: ["latin"],
});

const geistMono = Geist_Mono({
  variable: "--font-geist-mono",
  subsets: ["latin"],
});

export const metadata: Metadata = {
  title: "Create Next App",
  description: "Generated by create next app",
};

export default function RootLayout({
  children,
}: Readonly<{
  children: React.ReactNode;
}>) {
  return (
    <html lang="en">
      <body
        className={`${geistSans.variable} ${geistMono.variable} antialiased`}
      >
        {children}
        {/* Componente para sincronizar el token con cookies */}
        <AuthSyncLoader />
      </body>
    </html>
  );
}

// Necesitamos cargar el componente con un Client Component
function AuthSyncLoader() {
  return (
    <div suppressHydrationWarning>
      {typeof window === 'undefined' ? null : <ClientAuth />}
    </div>
  );
}

// Usamos dynamic import con ssr:false para cargar el componente solo en cliente
import dynamic from 'next/dynamic';
const ClientAuth = dynamic(() => import('@/components/auth/AuthSync'), { ssr: false });
